---

- id: circleci-config-validate
  name: CircleCI config validation
  description: Test if the CircleCI config is well formed.
  entry: hooks/circleci-config-validate.sh
  language: script
  files: ^.circleci/config.yml$

- id: go-fmt
  name: go fmt
  description: Runs `go fmt` and asserts no changes are needed.
  entry: hooks/go-fmt.sh
  language: script
  files: \.go$

- id: go-test
  name: go test
  description: Runs `go test` and asserts no tests are failing.
  entry: hooks/go-test.sh
  language: script
  files: \.go$

- id: go-mod-tidy
  name: go mod tidy
  description: Runs `go mod tidy` to ensure `go.mod` matches the project source.
  entry: hooks/go-mod-tidy.sh
  language: script
  files: \.go$

- id: go-generate
  name: go generate
  description: Runs `go generate` against the projects go files.
  entry: hooks/go-generate.sh
  language: script
  files: \.go$
  always_run: true

- id: forbid-binary
  name: Forbid binaries
  description: Forbid binary files from being committed
  entry: hooks/forbid-binary.sh
  language: script
  types: ['binary']

- id: shellcheck
  name: Test shell scripts with shellcheck
  description: Shell scripts conform to shellcheck
  entry: hooks/shellcheck.sh
  language: script
  types: [shell]
  exclude_types: [awk, csh, expect, perl, python, ruby, tcsh, zsh]
  args: [-e, SC1091]
  additional_dependencies: [shellcheck]

- id: shfmt
  name: Check shell style with shfmt
  language: script
  entry: hooks/shfmt.sh
  types: [shell]
  exclude_types: [awk, csh, expect, perl, python, ruby, tcsh, zsh]
  args: ['-l', '-i', '2', '-ci']
  additional_dependencies: [shfmt]
